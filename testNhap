#include <iostream>
#include <fstream>
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <mylib.h>
#include<string.h>
#include<conio.h>

#define UP 72
#define DOWN 80
#define BACKSPACE 8
#define ENTER 13
#define ESC 27
#define RIGHT 77
#define LEFT 75
#define SPACE 32
#define F1 59
#define F2 60
#define F3 61
#define F4 62


#define ArrowRIGHT 27
#define ArrowLEFT 26
#define ArrowUP 25
#define ArrowDOWN 24
using namespace std;
const int so_item = 3;
const int so_itemDg = 4;
const int so_itemIn = 3;
const int dong =5;
const int cot = 20 ;
const int minN = 1;
const int maxN = 100;
char menuNgoai[so_item][50]={"1. Hieu chinh the doc gia     ",
							 "2. In danh sach doc gia     ",
			                 "3. Ket thuc chuong trinh    "};
char menuDocgia[so_itemDg][50]={"1. Them doc gia     ",
								"2. Chinh sua doc gia     ",
								"3. Xoa doc gia    ",
			                   	"4. Quay lai    "};
char menuGioitinh[so_item][50]= {" Nam ",
			                   	 " Nu "};
char menuIn[so_itemIn][50]={"1. In theo thu tu ten tang dan   ",
							"2. In theo thu tu ma doc gia tang dan    ",
			                "3. Quay lai   "};
struct Muontra
{
	int MASACH,muon,tra,trangthai2;
};
struct nodeMt
{  
    Muontra mt;
    struct nodeMt *left, *right;
};
typedef  nodeMt *PTR2;
struct Docgia
{
	int mathe,trangthai3,phai;
	char ho[40],ten[10];
	Muontra *dangmuon;
};
struct nodeDg
{
   int key;	
   Docgia dg;
   struct nodeDg *left;
   struct nodeDg *right;
};
typedef nodeDg *PTR3;
void Normal () {
	SetColor(15);
	SetBGColor(0);
}
void HighLight () {
	SetColor(15);
	SetBGColor(1);
}
int MenuNgoai(char mN [][50],int so)
{
	Normal();
  	system("cls");   
  	if (so==2)
	{
		gotoxy(cot+2,dong-2);
		SetColor(4);
		cout << "   QUAN LY THU VIEN   ";
	}
	Normal();
	int chon =0;
  	for (int i=0; i< so ; i++)
  	{ 
	  	gotoxy(cot, dong +i);
    	cout << mN[i];
  	}	
  	HighLight();
  	gotoxy(cot,dong+chon);
  	cout << mN[chon];
  	char kytu;
	do 
	{
  		kytu = getch();
  		if (kytu==0) 
		  	kytu = getch();
  		switch (kytu) 
		{
    		case UP:
				if (chon+1 >1)
  				{
  		        	Normal();
              		gotoxy(cot,dong+chon);
              		cout << mN[chon];
              		chon --;
              		HighLight();
              		gotoxy(cot,dong+chon);
              		cout << mN[chon];
  				}
  			  	break;
  			case DOWN:
			  	if (chon+1 <so)
  			  	{
  		        	Normal();
              		gotoxy(cot,dong+chon);
              		cout << mN[chon];
              		chon ++;
              		HighLight();
              		gotoxy(cot,dong+chon);
              		cout << mN[chon];
  				}
  			  	break;
  			case ESC: return 0;
  			case 13 : return chon+1;
  		}		  // end switch
  	} while (1);
}
int MenuGioitinh(char mGt [so_item][50],int &vtx,int &vty)
{
	Normal();
	int chon =0;
  	for (int i=0; i< so_item; i++)
  	{ 
	  	gotoxy(vtx+i*5, vty);
    	cout << mGt[i];
  	}	
  	HighLight();
  	gotoxy(vtx,vty);
  	cout << mGt[chon];
  	char kytu;
	do 
	{
  		kytu = getch();
  		if (kytu==0) 
		  	kytu = getch();
  		switch (kytu) 
		{
    		case LEFT:
				if (chon+1 >1)
  				{
  		        	Normal();
              		gotoxy(vtx+chon*5,vty);
              		cout << mGt[chon];
              		chon --;
              		HighLight();
              		gotoxy(vtx+chon*5,vty);
              		cout << mGt[chon];
  				}
  			  	break;
  			case RIGHT:
			  	if (chon+1 <2)
  			  	{
  		        	Normal();
              		gotoxy(vtx+chon*5,vty);
              		cout << mGt[chon];
              		chon ++;
              		HighLight();
              		gotoxy(vtx+chon*5,vty);
              		cout << mGt[chon];
  				}
  			  	break;
  			case UP:
  				return -2;
  			case ESC: return 0;
  			case 13 : return chon+1;
  		}		  // end switch
  	} while (1);
}
int Gioitinh(char mGt [so_item][50],int vtx,int vty)
{
	int gt= MenuGioitinh(mGt,vtx,vty);
	gotoxy(vtx, vty);
	Normal();
	if (gt==1)
		{
			cout << " Nam                ";
			return 1;
		}
	else if(gt==2)
		{
			cout << " Nu                 ";
			return 0;
		}
	else if(gt==0)
		{
			return -1;
		}
	else if(gt==-2)
		{
			return -2;
		}
}
void Insert_node(PTR3 &p, int mathe, char *ten, int trangthai3, int phai)
{
	if (p==NULL)
	{
		p = new nodeDg;
		p->key=mathe;
		strcpy(p->dg.ten,ten);
		p->dg.mathe=mathe;
		p->dg.phai=phai;
		p->left=NULL;
		p->right=NULL;
	}
	else if (mathe<p->key)
		Insert_node (p->left,mathe,ten,trangthai3,phai);
	else if (mathe>p->key)
		Insert_node (p->right,mathe,ten,trangthai3,phai);
	delete[] ten;
	ten=NULL;
}
void XuatDocgia(PTR3 &p)
{
	cout << "Ho va ten: "<< p->dg.ten;
	cout << "\nGioi tinh: ";
	if (p->dg.phai==1)	
		cout << "Nam";
	else if(p->dg.phai==0)
		cout << "Nu"; 
	cout<< "\nMa the: "<< p->key << endl;
}
void Inorder (PTR3 &p)
{
	if (p != NULL)
	{
		Inorder(p->left);
		XuatDocgia(p);
		Inorder(p->right);
	}
}
void GhiFile(int x, char ten[])
{
	fstream f;
	f.open(("testfile.txt"), ios::app);
	f << ten;
	f << x;
}
void KhoitaoMangtam(int *mangtam)
{
	mangtam=new int [100];
	for (int i=0; i<100; i++)
		mangtam[i]=0;
	delete[]mangtam;
	mangtam=NULL;
}
int Matrung(int &mathe,int *mangtam,bool &tran)
{
	for (int i=0; i<100; i++)
	{
		if (mathe==mangtam[i])
		{
			if (i==99) // Tran bo nho (Quay lai day sua)
				{
					cout << "BO NHO DAY";
					tran=true;
					return 0;
				}
			return 1;
		}
		else if (mangtam[i]==0)
		{
			mangtam[i]=mathe;
			return 0;
		}
	}
}
int RandomSo(int &mathe,int minN,int maxN,int *mangtam,bool &tran)
{
    srand((int)time(0));
    int check=0;
    do 
    {
    	mathe = minN + rand() % (maxN + 1 - minN);
    	check=Matrung(mathe, mangtam,tran);
	}while(check==1);
	if (tran==false)
  		return mathe;
	else return 0; 
}
void XoaChu(char *ten,int dau, int &cuoi,int vitri)
{
	if (vitri-1>=dau)
	{
		gotoxy(vitri-1,wherey());
		cout << '\0';
		gotoxy(vitri-1,wherey());
		*(ten+(vitri-1-dau))='\0';
		if ((vitri-1-dau)==cuoi)
			cuoi--;
	}
}
bool CheckTen(char *ten,int x,int y,int &cuoi)
{
	bool rong=true;
	for (int i=0;i<=cuoi;i++)
	{	
		if ((ten[i]!='\0')&&(ten[i]!=32))
			{
				rong=false;
				break;
			}				
	}
	if (rong==true)
	{
		gotoxy(10,20);
		SetColor(4);
		cout << "XIN HAY NHAP TEN! ";
		Sleep(1500);
		gotoxy(10,20);
		cout<< "                                ";
		gotoxy(x,y);
		SetColor(15);
		return false;	
	}
	if (rong==false)
	{
		for (int i=0;i<=cuoi;i++)
		{	
			if ((ten[i]==32)||(ten[i]=='\0'))
				continue;
			if ((ten[i]<65)||((ten[i]>90)&&(ten[i]<97))||(ten[i]>122))
			{
				gotoxy(10,20);
				SetColor(4);
				cout << "TEN CHUA KI TU KHONG HOP LE. ";
				Sleep(1500);
				gotoxy(10,20);
				cout<< "                                ";
				gotoxy(x,y);
				SetColor(15);
				return false;
			}
		}	
	}
	return true;
}
void NhapTen(char &kitu, char *ten, int &dau,int &cuoi,int vitri)
{
	cout << kitu;
	*(ten+(vitri-dau))=kitu;
	if ((vitri-dau)>cuoi)
		cuoi=vitri-dau;
}
void kituhoa(char *ten,int &cuoi)
{
    int i=0;
    if (ten[0] != 32)
    {
        if ((ten[0] >96) && (ten[0]< 123))
		{
			ten[0] -= 32;
        }
    }
    if ((ten[0] == 32)||(ten[0]=='\0'))
    {
    	if ((ten[1] >96) && (ten[1]< 123))
		{
			ten[1] -= 32;
        }
	}
    for (i = 1; i <= cuoi; i++)
	{
        if ((ten[i] == 32)||(ten[i]=='\0'))
        {
            if ((ten[i + 1]> 96) && (ten[i + 1] < 123))
            {
    			ten[i + 1] -= 32;
            }
        }
    }
}
void XuatTen(char *ten,int &cuoi)
{
	for (int i=0;i<=cuoi;i++)
	{
		cout << ten[i];
	}
}
int DienTen(PTR3 &p, int *mangtam,char *ten) 
{
	fflush(stdin);
	Normal();
	system("cls");
	ten= new char[20];

	int mathe=0;
	bool tran=false;
	char kitu;
	bool checkten=true;

	int cuoi=0,i=0;
	cout << "Nhap ho va ten: ";
	int x=wherex(),y=wherey();
	cout<< "\nGioi tinh: ";
	gotoxy(x,y);
	for (int i=0;i<20;i++)
		ten[i]='\0';
	do
	{
		kitu=getch();
		switch (kitu)
		{
			case ENTER:
			{
				gotoxy (x,y+1);
				checkten=CheckTen(ten,x,y,cuoi);
				if (checkten==true)
			 	{
				 	kituhoa(ten,cuoi);
			 		gotoxy(x,y);
					XuatTen(ten,cuoi);
					gotoxy(x-5,y+1);
					int gt=Gioitinh(menuGioitinh,wherex(),wherey());
					if (gt==-1)
						return 0;
					else if (gt==-2)
					{
						gotoxy(x,y);
						break;
					}
					gotoxy(0,2);
					mathe=RandomSo(mathe,minN,maxN,mangtam,tran);
					cout << "Ma the cua ban la: " << mathe;
					gotoxy(10,20);
					SetColor(15);
					SetBGColor(4);
					cout << " THEM DOC GIA THANH CONG! ";
					Sleep(1500);
					gotoxy(10,20);
					SetColor(15);
					SetBGColor(0);
					cout<< "                                ";
					Insert_node(p, mathe, ten, 1, gt);
					delete ten;
					ten=NULL;
					return 1;
				}
				else 
				{
					gotoxy(x,y);
					break;
				}
			}
			case BACKSPACE:
			{
				XoaChu(ten,x,cuoi,wherex());
				break;
			}
			case -32:
			{
				kitu =getch();
				if (kitu==75)
				{
					if (wherex()>x)
					{	
						gotoxy(wherex()-1,wherey());
					}
					break;
				}
				if (kitu==77)
				{
					gotoxy(wherex()+1,wherey());
					break;
				}
				if (kitu==72)
				{
					break;
				}
				if (kitu==80)
				{
					break;
				}
			}
			case ESC:
				return 0;
			default:
			{ 
				NhapTen(kitu,ten, x,cuoi,wherex());
				break;
			}
		}
	}while(1);
	
}
int Menu(PTR3 &p,int *mangtam,char *ten)
{
	int chon,dienten=0;
	do
  	{
    	chon = MenuNgoai (menuNgoai,so_item);
    	switch (chon)
		{
    		case 1: 
			{
				int chonDg;
				do
  				{
    				chonDg = MenuNgoai (menuDocgia,so_itemDg);
    				switch (chonDg)
					{
    					case 1: 
						{
							do
							{
								dienten=DienTen(p,mangtam,ten);
							}while (dienten==1);
							break;
						}
						case 2:
						{
							Normal();
							system ("cls");
							Inorder (p);
							getch();
							break;
						}
    					case 4: 
						{
							Menu(p,mangtam,ten);
							return 0;
						}
						case 0: 
						{
							Menu(p,mangtam,ten);
							return 0;
						}
   					}
  				}while (1);
  				break;
			}
    		case so_item: return 0;
  		}
	}while (1);
}
int main()
{
	fflush(stdin);
	Normal ();
	system ("cls");
	char *ten=NULL;
	int *mangtam;
	mangtam = new int [20];
	KhoitaoMangtam(mangtam);
	PTR3 p=NULL;
	Menu(p,mangtam,ten);
	delete[]mangtam;
}
/*int main()
{
	int *tam;
	tam = new int [20];
	tam[0]=28;
	cout << tam[0]<<endl;
	delete[]tam;
	tam = new int [20];
	cout <<tam[0];
/*	int *tam;
	tam = new int [20];
	
	for (int i=0;i<=20;i++)
		cout <<tam[i]<< " ";
	cout << endl;
	delete[]tam;
	tam[2]=9;
	cout << endl;
	for (int i=0;i<=20;i++)
		cout <<tam[i]<< " ";
}*/

/*int main()
{
   int ten;
   ten = getch();
   while (true)
   {
   		Sleep(500);
   		cout << ten<<" ";
   }
}*/


 


